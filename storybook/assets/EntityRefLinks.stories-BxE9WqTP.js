import{R as p}from"./index-CTjT7uj6.js";import{E as m}from"./EntityRefLinks-vccH3Sg9.js";import{e as s}from"./routes-Dw1ndjhF.js";import{w as n}from"./appWrappers-MUaV3VUY.js";import"./EntityRefLink-C_StPLuC.js";import"./Link-CRcM_l-0.js";import"./index-Cqve-NHl.js";import"./lodash-CoGan1YB.js";import"./index-BhgyLgKK.js";import"./index-CNMBxS8v.js";import"./ApiRef-DUoQ5WvO.js";import"./interopRequireDefault-Y9pwbXtE.js";import"./createSvgIcon-4utR8_H1.js";import"./capitalize-BWjKmKKm.js";import"./defaultTheme-DquFOgf8.js";import"./withStyles-DWaS6n8x.js";import"./hoist-non-react-statics.cjs-DzIEFHQI.js";import"./createChainedFunction-Da-WpsAN.js";import"./createSvgIcon-CL6P1I3F.js";import"./debounce-DtXjJkxj.js";import"./isMuiElement-B_4ddUuK.js";import"./ownerWindow-C3iVrxHF.js";import"./useIsFocusVisible-DdvWPq7A.js";import"./useControlled-B47E2WMp.js";import"./unstable_useId-B3Hiq1YI.js";import"./makeStyles-CRB_T0k9.js";import"./useAnalytics-Dmj0Ntiu.js";import"./ConfigApi-BZwRYjFH.js";import"./Typography-D5Gm01bp.js";import"./useRouteRef-CVI83Ox1.js";import"./EntityDisplayName-GbSrJIGq.js";import"./Box-DU2WS7ls.js";import"./typography-1q_m8518.js";import"./Tooltip-3svt0R8o.js";import"./useTheme-0ztDbzjM.js";import"./Popper-D9fa09d_.js";import"./Portal-BLjQd1nq.js";import"./Grow-BqP4q7YH.js";import"./utils-h0SkNxCQ.js";import"./TransitionGroupContext-BtzQ-Cv7.js";import"./ref-8pKZtiZi.js";import"./MockTranslationApi-D0CDTXL6.js";import"./index-CFaqwFgm.js";import"./classCallCheck-BNzALLS0.js";import"./inherits-BBh9Yz5k.js";import"./toArray-n7tUSQe9.js";import"./TranslationApi-TmuXcaNh.js";import"./WebStorage-D9doizkM.js";import"./useAsync-CXA3qup_.js";import"./useMountedState-DkESzBh4.js";import"./componentData-BzTcs2ef.js";import"./isSymbol-C_KZXW2d.js";import"./isObject-DlTwUI3n.js";import"./toString-B79bsZRM.js";import"./ApiProvider-D8NVuZ3M.js";import"./index-BRV0Se7Z.js";import"./CssBaseline-0XN_ELQr.js";import"./ThemeProvider-iV7LyTO2.js";import"./jsx-runtime-Cw0GR0a5.js";import"./palettes-C1DVN5xY.js";const a={entityRefs:["component:default/playback","user:default/fname.lname"]},Rt={title:"Catalog /EntityRefLinks",decorators:[r=>n(p.createElement(r,null),{mountedRoutes:{"/catalog/:namespace/:kind/:name":s}})]},t=r=>p.createElement(m,{...r});t.args=a;t.__docgenInfo={description:"",methods:[],displayName:"Default",props:{defaultKind:{required:!1,tsType:{name:"string"},description:""},entityRefs:{required:!0,tsType:{name:"Array",elements:[{name:"TRef"}],raw:"TRef[]"},description:""},hideIcons:{required:!1,tsType:{name:"boolean"},description:""},fetchEntities:{required:!1,tsType:{name:"boolean"},description:"@deprecated This option is no longer used; presentation is handled by entityPresentationApiRef instead"}}};var e,o,i;t.parameters={...t.parameters,docs:{...(e=t.parameters)==null?void 0:e.docs,source:{originalSource:"(args: EntityRefLinksProps<string | CompoundEntityRef>) => <EntityRefLinks {...args} />",...(i=(o=t.parameters)==null?void 0:o.docs)==null?void 0:i.source}}};const gt=["Default"];export{t as Default,gt as __namedExportsOrder,Rt as default};
