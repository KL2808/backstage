import{d as _}from"./Search-DqqF5GMk.js";import{r as t,R as r}from"./index-CV65Cz2T.js";import{u as K}from"./useDebounce-9bFRwIhD.js";import{S as y,u as N}from"./SearchContext-Bg2fsBHP.js";import{T as z}from"./TextField-BoSPxMb2.js";import{I as b}from"./InputAdornment-BbK4g5pp.js";import{I as V}from"./IconButton-CCb2T_-R.js";import{B as F}from"./Button-Bw5MVOHR.js";import{u as L}from"./ApiRef-DSSgzaW4.js";import{b as M}from"./index-BuiljCIz.js";import{A as O}from"./useAnalytics-BvU8z2Qw.js";import{c as Q}from"./ConfigApi-BmcvyZGI.js";import"./interopRequireDefault-Y9pwbXtE.js";import"./createSvgIcon-DMBTaFtW.js";import"./capitalize-52YtlJa-.js";import"./defaultTheme-WHYcXxGo.js";import"./withStyles-C_eMWQcb.js";import"./hoist-non-react-statics.cjs-DscmM33_.js";import"./createChainedFunction-Da-WpsAN.js";import"./createSvgIcon-BoOF83CO.js";import"./debounce-DtXjJkxj.js";import"./isMuiElement-DG475NJP.js";import"./ownerWindow-D1FXuRdm.js";import"./useIsFocusVisible-DMiTmV9E.js";import"./index-CpD63NMF.js";import"./useControlled-ltvK4nzt.js";import"./unstable_useId-DsWtIzNz.js";import"./lodash-D2SO6J9k.js";import"./useAsync-cwiHyrW_.js";import"./useMountedState-BG_s6PIB.js";import"./api-DaAaT8k3.js";import"./FormLabel-DHO9Aw1o.js";import"./formControlState-ByiNFc8I.js";import"./useFormControl-Cf2zJBza.js";import"./InputLabel-C1BQdAFz.js";import"./Select-BCgprwNU.js";import"./react-is.production.min-D0tnNtx9.js";import"./useTheme-CyYT1vdA.js";import"./Popover-Dw-CFBsR.js";import"./Modal-B2uJO048.js";import"./classCallCheck-BNzALLS0.js";import"./Portal-Cz7V7drg.js";import"./Paper-Ra1TVF2W.js";import"./Grow-BnF02GAk.js";import"./utils-BUZBPLOI.js";import"./TransitionGroupContext-C1n1zRT4.js";import"./List-DulzYPgQ.js";import"./ListContext-DDd8B5Hf.js";import"./Typography-DFGLiOLt.js";import"./ButtonBase-CDKLPdMe.js";const C=t.forwardRef((u,d)=>{const{onChange:n,onKeyDown:o=()=>{},onClear:i=()=>{},onSubmit:s=()=>{},debounceTime:a=200,clearButton:f=!0,fullWidth:m=!0,value:h,label:g,placeholder:S,inputProps:v={},InputProps:B={},endAdornment:E,...A}=u,I=L(Q),[p,c]=t.useState(""),l=t.useRef("");t.useEffect(()=>{c(e=>e===l.current?String(h):e)},[h,l]),K(()=>{l.current=p,n(p)},a,[p]);const x=t.useCallback(e=>{c(e.target.value)},[c]),R=t.useCallback(e=>{o&&o(e),s&&e.key==="Enter"&&s()},[o,s]),w=t.useCallback(()=>{l.current="",n(""),c(""),i&&i()},[n,i]),P=g?void 0:"Search",T=S??`Search in ${I.getOptionalString("app.title")||"Backstage"}`,k=M().getSystemIcon("search")||_,q=r.createElement(b,{position:"start"},r.createElement(V,{"aria-label":"Query",size:"small",disabled:!0},r.createElement(k,null))),D=r.createElement(b,{position:"end"},r.createElement(F,{"aria-label":"Clear",size:"small",onClick:w,onKeyDown:e=>{e.key==="Enter"&&e.stopPropagation()}},"Clear"));return r.createElement(y,{inheritParentContextIfAvailable:!0},r.createElement(z,{id:"search-bar-text-field","data-testid":"search-bar-next",variant:"outlined",margin:"normal",inputRef:d,value:p,label:g,placeholder:T,InputProps:{startAdornment:q,endAdornment:f?D:E,...B},inputProps:{"aria-label":P,...v},fullWidth:m,onChange:x,onKeyDown:R,...A}))}),U=t.forwardRef((u,d)=>{const{value:n="",onChange:o,...i}=u,{term:s,setTerm:a}=N();t.useEffect(()=>{n&&a(String(n))},[n,a]);const f=t.useCallback(m=>{o?o(m):a(m)},[o,a]);return r.createElement(y,{inheritParentContextIfAvailable:!0},r.createElement(O,{attributes:{pluginId:"search",extension:"SearchBar"}},r.createElement(C,{...i,ref:d,value:s,onChange:f})))});C.__docgenInfo={description:`All search boxes exported by the search plugin are based on the <SearchBarBase />,
and this one is based on the <InputBase /> component from Material UI.
Recommended if you don't use Search Provider or Search Context.

@public`,methods:[],displayName:"SearchBarBase",props:{debounceTime:{required:!1,tsType:{name:"number"},description:""},clearButton:{required:!1,tsType:{name:"boolean"},description:""},onClear:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""},onSubmit:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""},onChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(value: string) => void",signature:{arguments:[{type:{name:"string"},name:"value"}],return:{name:"void"}}},description:""},endAdornment:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""}}};U.__docgenInfo={description:`Recommended search bar when you use the Search Provider or Search Context.

@public`,methods:[],displayName:"SearchBar"};export{U as SearchBar,C as SearchBarBase};
