import{R as p}from"./index-CV65Cz2T.js";import{E as m}from"./EntityRefLinks-BFVyO9cC.js";import{e as s}from"./routes-BzJx68Un.js";import{w as n}from"./appWrappers-Ppg29Vuh.js";import"./EntityRefLink-DOsDZlsA.js";import"./Link-DO8PRcPs.js";import"./index-DSEhRz7_.js";import"./lodash-D2SO6J9k.js";import"./index-V23z6GDy.js";import"./index-BuiljCIz.js";import"./ApiRef-DSSgzaW4.js";import"./interopRequireDefault-Y9pwbXtE.js";import"./createSvgIcon-B6km7FGr.js";import"./capitalize-52YtlJa-.js";import"./defaultTheme-WHYcXxGo.js";import"./withStyles-C_eMWQcb.js";import"./hoist-non-react-statics.cjs-DscmM33_.js";import"./createChainedFunction-Da-WpsAN.js";import"./createSvgIcon-BoOF83CO.js";import"./debounce-DtXjJkxj.js";import"./isMuiElement-DG475NJP.js";import"./ownerWindow-D1FXuRdm.js";import"./useIsFocusVisible-B2Dvw-Ws.js";import"./useControlled-ltvK4nzt.js";import"./unstable_useId-DsWtIzNz.js";import"./makeStyles-CkJZxfhX.js";import"./useAnalytics-BvU8z2Qw.js";import"./ConfigApi-BmcvyZGI.js";import"./Typography-DFGLiOLt.js";import"./useRouteRef-DpQDGLPk.js";import"./EntityDisplayName-C8pqgRMF.js";import"./Box-Y2gNioDL.js";import"./typography-0XlFLCN0.js";import"./Tooltip-IejhCGS-.js";import"./useTheme-CyYT1vdA.js";import"./Popper-hSP61Xai.js";import"./Portal-nleYRD7c.js";import"./Grow-PDDGETLu.js";import"./utils-vtCpIZas.js";import"./TransitionGroupContext-C1n1zRT4.js";import"./ref-8pKZtiZi.js";import"./MockTranslationApi-B8Zh48wh.js";import"./index-DWA0-5lI.js";import"./classCallCheck-BNzALLS0.js";import"./inherits-CkEHJ8Ip.js";import"./toArray-CoXhHPie.js";import"./TranslationApi-BZ5LsqDR.js";import"./WebStorage-DIH418uN.js";import"./useAsync-cwiHyrW_.js";import"./useMountedState-BG_s6PIB.js";import"./componentData-Ch1YzSDK.js";import"./isSymbol-B6IIivl5.js";import"./isObject-CDdS0vB1.js";import"./toString-C4GbLIMt.js";import"./ApiProvider-BkbfiZHS.js";import"./index-BDlCPcVq.js";import"./CssBaseline-D5AXl3S9.js";import"./ThemeProvider-UKwvVYMA.js";import"./jsx-runtime-B1AhRb-V.js";import"./palettes-C1DVN5xY.js";const a={entityRefs:["component:default/playback","user:default/fname.lname"]},Rt={title:"Catalog /EntityRefLinks",decorators:[r=>n(p.createElement(r,null),{mountedRoutes:{"/catalog/:namespace/:kind/:name":s}})]},t=r=>p.createElement(m,{...r});t.args=a;t.__docgenInfo={description:"",methods:[],displayName:"Default",props:{defaultKind:{required:!1,tsType:{name:"string"},description:""},entityRefs:{required:!0,tsType:{name:"Array",elements:[{name:"TRef"}],raw:"TRef[]"},description:""},hideIcons:{required:!1,tsType:{name:"boolean"},description:""},fetchEntities:{required:!1,tsType:{name:"boolean"},description:"@deprecated This option is no longer used; presentation is handled by entityPresentationApiRef instead"}}};var e,o,i;t.parameters={...t.parameters,docs:{...(e=t.parameters)==null?void 0:e.docs,source:{originalSource:"(args: EntityRefLinksProps<string | CompoundEntityRef>) => <EntityRefLinks {...args} />",...(i=(o=t.parameters)==null?void 0:o.docs)==null?void 0:i.source}}};const gt=["Default"];export{t as Default,gt as __namedExportsOrder,Rt as default};
