import{R as p}from"./index-CTjT7uj6.js";import{E as m}from"./EntityRefLinks-DzafT62v.js";import{e as s}from"./routes-BjRdPDc2.js";import{w as n}from"./appWrappers-WNR3qPM7.js";import"./EntityRefLink-BgLDtapD.js";import"./Link-Cc6AWI2O.js";import"./index-Cqve-NHl.js";import"./lodash-CoGan1YB.js";import"./index-DwHHXP4W.js";import"./index-CNMBxS8v.js";import"./ApiRef-DUoQ5WvO.js";import"./interopRequireDefault-Y9pwbXtE.js";import"./createSvgIcon-rCELOQ8q.js";import"./capitalize-CjHL08xv.js";import"./defaultTheme-U8IXQtr7.js";import"./withStyles-Dj_puyu8.js";import"./hoist-non-react-statics.cjs-DzIEFHQI.js";import"./createChainedFunction-Da-WpsAN.js";import"./createSvgIcon-CAWH9WqG.js";import"./debounce-DtXjJkxj.js";import"./isMuiElement-B_4ddUuK.js";import"./ownerWindow-C3iVrxHF.js";import"./useIsFocusVisible-BQk2_Vhe.js";import"./useControlled-B47E2WMp.js";import"./unstable_useId-B3Hiq1YI.js";import"./makeStyles-3WuthtJ7.js";import"./useAnalytics-Dmj0Ntiu.js";import"./ConfigApi-BZwRYjFH.js";import"./Typography-CUBppVl0.js";import"./useRouteRef-CVI83Ox1.js";import"./EntityDisplayName-DGMb-b40.js";import"./Box-BZcLdGyY.js";import"./typography-hVTC7Hfk.js";import"./Tooltip-D1xsFmJ6.js";import"./useTheme-hfNS2WFw.js";import"./Popper-CRCF8N5R.js";import"./Portal-BcgI5KAA.js";import"./Grow-Bw-3CPgf.js";import"./utils-ClB-4IsE.js";import"./TransitionGroupContext-BtzQ-Cv7.js";import"./ref-8pKZtiZi.js";import"./MockTranslationApi-1jo2KCqo.js";import"./index-CFaqwFgm.js";import"./classCallCheck-BNzALLS0.js";import"./inherits-Cm41Z5uw.js";import"./toArray-QeYAVC82.js";import"./TranslationApi-TmuXcaNh.js";import"./WebStorage-D9doizkM.js";import"./useAsync-CXA3qup_.js";import"./useMountedState-DkESzBh4.js";import"./componentData-BzTcs2ef.js";import"./isSymbol-C_KZXW2d.js";import"./isObject-DlTwUI3n.js";import"./toString-B79bsZRM.js";import"./ApiProvider-D8NVuZ3M.js";import"./index-BRV0Se7Z.js";import"./CssBaseline-B78aEvSr.js";import"./ThemeProvider-HGIy1WSf.js";import"./jsx-runtime-Cw0GR0a5.js";import"./palettes-C1DVN5xY.js";const a={entityRefs:["component:default/playback","user:default/fname.lname"]},Rt={title:"Catalog /EntityRefLinks",decorators:[r=>n(p.createElement(r,null),{mountedRoutes:{"/catalog/:namespace/:kind/:name":s}})]},t=r=>p.createElement(m,{...r});t.args=a;t.__docgenInfo={description:"",methods:[],displayName:"Default",props:{defaultKind:{required:!1,tsType:{name:"string"},description:""},entityRefs:{required:!0,tsType:{name:"Array",elements:[{name:"TRef"}],raw:"TRef[]"},description:""},hideIcons:{required:!1,tsType:{name:"boolean"},description:""},fetchEntities:{required:!1,tsType:{name:"boolean"},description:"@deprecated This option is no longer used; presentation is handled by entityPresentationApiRef instead"}}};var e,o,i;t.parameters={...t.parameters,docs:{...(e=t.parameters)==null?void 0:e.docs,source:{originalSource:"(args: EntityRefLinksProps<string | CompoundEntityRef>) => <EntityRefLinks {...args} />",...(i=(o=t.parameters)==null?void 0:o.docs)==null?void 0:i.source}}};const gt=["Default"];export{t as Default,gt as __namedExportsOrder,Rt as default};
