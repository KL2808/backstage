import{r as l,R as t}from"./index-CTjT7uj6.js";import{m as p}from"./makeStyles-B-0HYIDn.js";import{L as c}from"./List-D13tgy_V.js";import{L as m}from"./ListItemIcon-DiaQqXMJ.js";import{L as u}from"./ListItemText-BSKfKcuk.js";import{L as d}from"./Link-tNmn5xaV.js";import"./defaultTheme-BHCLteCA.js";import"./capitalize-Cv45LKJ9.js";import"./withStyles-CtFSFDis.js";import"./hoist-non-react-statics.cjs-DzIEFHQI.js";import"./ListContext-DydK1sOh.js";import"./Typography-HWeGzz7A.js";import"./index-Cqve-NHl.js";import"./lodash-CoGan1YB.js";import"./index-BhgyLgKK.js";import"./index-CNMBxS8v.js";import"./ApiRef-DUoQ5WvO.js";import"./typeof-Jcp7TgkT.js";import"./createSvgIcon-C3BJbdiB.js";import"./createChainedFunction-Da-WpsAN.js";import"./createSvgIcon-CAOX6Iqp.js";import"./debounce-DtXjJkxj.js";import"./isMuiElement-B_4ddUuK.js";import"./ownerWindow-C3iVrxHF.js";import"./useIsFocusVisible-DdvWPq7A.js";import"./useControlled-B47E2WMp.js";import"./unstable_useId-B3Hiq1YI.js";import"./useAnalytics-Dmj0Ntiu.js";import"./ConfigApi-BZwRYjFH.js";const i=l.createContext(void 0),y=e=>{const{children:r,tools:o}=e,[n,a]=t.useState(o),s={tools:n};return t.createElement(i.Provider,{value:s},r)},g=()=>t.useContext(i);y.__docgenInfo={description:"",methods:[],displayName:"ContextProvider",props:{children:{required:!0,tsType:{name:"JSX.Element"},description:""},tools:{required:!0,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  label: string;
  url: string;
  icon: React.ReactNode;
}`,signature:{properties:[{key:"label",value:{name:"string",required:!0}},{key:"url",value:{name:"string",required:!0}},{key:"icon",value:{name:"ReactReactNode",raw:"React.ReactNode",required:!0}}]}}],raw:"Tool[]"},description:""}}};const x=p(e=>({toolkit:{display:"flex",flexWrap:"wrap",textAlign:"center"},tool:{margin:e.spacing(.5,1)},label:{marginTop:e.spacing(1),width:"72px",fontSize:"0.9em",lineHeight:"1.25",overflowWrap:"break-word",color:e.palette.text.secondary},icon:{width:"64px",height:"64px",borderRadius:"50px",justifyContent:"center",alignItems:"center",boxShadow:e.shadows[1],backgroundColor:e.palette.background.default}})),f=e=>{const r=x(),o=g(),n=(o==null?void 0:o.tools)??e.tools;return t.createElement(c,{className:r.toolkit},n.map(a=>t.createElement(d,{key:a.url,to:a.url,className:r.tool},t.createElement(m,{className:r.icon},a.icon),t.createElement(u,{secondaryTypographyProps:{className:r.label},secondary:a.label}))))};f.__docgenInfo={description:`A component to display a list of tools for the user.

@public`,methods:[],displayName:"Content",props:{tools:{required:!0,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  label: string;
  url: string;
  icon: React.ReactNode;
}`,signature:{properties:[{key:"label",value:{name:"string",required:!0}},{key:"url",value:{name:"string",required:!0}},{key:"icon",value:{name:"ReactReactNode",raw:"React.ReactNode",required:!0}}]}}],raw:"Tool[]"},description:""}}};export{f as Content,y as ContextProvider};
